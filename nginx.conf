# Explicitly set worker processes and events
worker_processes auto;
worker_rlimit_nofile 8192;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    
    # Fix for nginx warning about proxy headers hash
    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 64;
    
    # Enable logging
    error_log /var/log/nginx/error.log notice;
    access_log /var/log/nginx/access.log combined;
    
    # Define upstream for backend API
    upstream backend {
        server 127.0.0.1:3001;
        keepalive 32;
    }

    server {
        # Use port 3000 as default, will be replaced by PORT env var
        listen 3000;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        
        root /app/dist;
        index index.html;
        
        # Serve static files
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # Proxy API requests to backend
        location /api {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # Logging
            access_log /var/log/nginx/api_access.log combined;
            error_log /var/log/nginx/api_error.log notice;
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://backend;
            proxy_intercept_errors on;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # Fallback for health check
        location @health_fallback {
            add_header Content-Type application/json;
            return 200 '{"status":"OK","nginx":"running","backend":"unavailable"}';
        }
        
        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}